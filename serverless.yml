org: jonathanrangel
app: yoox-serverless-api
service: login-service
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-2
  stage: dev
  apiGateway:
    shouldStartNameWithService: true
  httpApi:
    authorizers:
      customAuthorizer:
        type: request
        functionName: customAuthorizer
        identitySource:
          - $request.header.authorization
    cors:
      allowedOrigins:
        - https://www.yooxgrupofinanciero.com
        - https://development.yooxgrupofinanciero.com
        - https://staging.yooxgrupofinanciero.com
        - http://localhost:4200
      allowedHeaders:
        - Content-Type
        - authorization

functions:
  login:
    handler: ./src/user-service/login.handler
    events:
      - httpApi:
          path: /v1/login
          method: post

  tokenValidation:
    handler: ./src/authorizer/tokenValidation.handler
    events:
      - httpApi:
          path: /v1/tokenValidation
          method: get

  payment:
    handler: ./src/payments/payment.handler
    events:
      - httpApi:
          method: post
          path: /v1/payment
          authorizer:
            name: customAuthorizer

  newLoanRequest:
    handler: ./src/loan-requests/newLoan.handler
    events:
      - httpApi:
          method: post
          path: /v1/loan-request/new
          authorizer:
            name: customAuthorizer

  updateLoanRequest:
    handler: ./src/loan-requests/updateLoan.handler
    events:
      - httpApi:
          method: post
          path: /v1/loan-request/update
          authorizer:
            name: customAuthorizer

  viewLoanRequest:
    handler: ./src/general-data-requests/getRequestDetail.handler
    events:
      - httpApi:
          method: post
          path: /v1/loan-request/view
          authorizer:
            name: customAuthorizer

  viewRequestList:
    handler: ./src/loan-requests/viewLoanList.handler
    events:
      - httpApi:
          method: post
          path: /v1/loan-request/list
          authorizer:
            name: customAuthorizer

  loan:
    handler: ./src/payments/loan.handler
    events:
      - httpApi:
          method: post
          path: /v1/loan/{id}
          authorizer:
            name: customAuthorizer

  uploadFiles:
    handler: ./src/customerFiles/uploadFiles.handler
    events:
      - httpApi:
          path: /v1/upload
          method: post
          authorizer:
            name: customAuthorizer

  getFile:
    handler: ./src/customerFiles/getFile.handler
    events:
      - httpApi:
          path: /v1/file
          method: post
          authorizer:
            name: customAuthorizer

  listFiles:
    handler: ./src/customerFiles/listFiles.handler
    events:
      - httpApi:
          path: /v1/list-files/{foldername}
          method: get
          authorizer:
            name: customAuthorizer

  getCustomer:
    handler: ./src/general-data-requests/getCustomer.handler
    events:
      - httpApi:
          method: post
          path: /v1/get-customer
          authorizer:
            name: customAuthorizer

  validateCURP:
    handler: ./src/validators/validateCURP.handler
    events:
      - httpApi:
          method: post
          path: /v1/validate/curp
          authorizer:
            name: customAuthorizer

  validatePhones:
    handler: ./src/validators/validatePhones.handler
    events:
      - httpApi:
          method: post
          path: /v1/validate/phones
          authorizer:
            name: customAuthorizer

  installments:
    handler: ./src/installments/installments.handler
    events:
      - httpApi:
          method: get
          path: /v1/installments
          authorizer:
            name: customAuthorizer

  customerLoanStatus:
    handler: ./src/customerLoanStatus/customerLoanStatus.handler
    events:
      - httpApi:
          method: get
          path: /v1/customer-loan-status

  customAuthorizer:
    handler: ./src/authorizer/auth.handler

custom:
  stage: ${opt:stage, self:provider.stage}
  environment:
    NODE_ENV: ${self:custom.stage}

plugins:
  - serverless-dotenv-plugin
  - serverless-esbuild
  - serverless-offline
